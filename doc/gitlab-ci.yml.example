image: kayna:latest

variables:
  DISTRIBUTION: xenial
  STABLE_BRANCH_REGEX: '^(release\d{2}|release)$'
  NEXT_RELEASE_NAME: 'release'
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_DRIVER: overlay

stages:
  - init
  - build
  - test
  - debuild
  - upload
  - docker_build
  - deploy
  - diagnose

.only_filters:
  build_only_on: &build_filter
    - branches
    - triggers
  deploy_only_on: &deploy_filter
    - triggers

before_script:
  - 'echo "Distribution: $DISTRIBUTION"'
  - export PATH="/usr/lib/ccache/:$PATH"
  - export CCACHE_DIR=/cache/$DISTRIBUTION/ccache_dir

init_job:
  image: "kayna:$DISTRIBUTION"
  stage: init
  only: *build_filter
  script:
    - CACHEDIR="/cache/$DISTRIBUTION"
    - 'mkdir -p $CACHEDIR || :'
    - echo 0 > APT-UPDATE
    - '[ "$FORCE_NEW_DOCKERIMAGE" = "1" ] && rm $CACHEDIR/_last_control || :'
    - 'diff -u debian/control $CACHEDIR/_last_control && [ "$(date +%G%V)" = "$(cat $CACHEDIR/_image_build_ts)" ] && echo "A healthy image is already exists." && exit 0 || :'
    - kayna docker-rmi "$DISTRIBUTION-$CI_PROJECT_ID"
    - kayna build-dep
    - which gcc >/dev/null && apt install -y ccache
    - kayna docker-commit "$DISTRIBUTION-$CI_PROJECT_ID"
    - echo 1 > APT-UPDATE
    - cp debian/control $CACHEDIR/_last_control
    - date +%G%V > $CACHEDIR/_image_build_ts
  artifacts:
    name: init_log_archive
    expire_in: 12h
    paths:
      - APT-UPDATE
      - KAYNA-LOG

build_job:
  image: "kayna-$DISTRIBUTION-$CI_PROJECT_ID"
  stage: build
  only: *build_filter
  script:
    - '[ "$(cat APT-UPDATE || true)" != "1" ] && kayna build-dep'
    - rm -f KAYNA-LOG
    - export CCACHE_BASEDIR=$PWD
    - 'mkdir -p ${CCACHE_DIR} || :'
    - kayna build
    # add file to empty directories, so they are picked by build artifacts
    - find -empty -type d -exec touch {}/.placeholder \;
  artifacts:
    name: build_artifacts
    untracked: true
    expire_in: 8 hours

test_job:
  image: "kayna-$DISTRIBUTION-$CI_PROJECT_ID"
  stage: test
  only: *build_filter
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  script:
    - rm -f KAYNA-LOG
    - export CCACHE_BASEDIR=$PWD
    - kayna test
    - mkdir -p debian/testlog
    - cp debian/*.debhelper.log debian/testlog/
  artifacts:
    name: test_logs_archive
    expire_in: 8 hours
    paths:
      - debian/*.debhelper.log
      - debian/testlog
      - KAYNA-LOG

debuild_job:
  image: "kayna-$DISTRIBUTION-$CI_PROJECT_ID"
  stage: debuild
  only: *build_filter
  script:
    - rm -f KAYNA-LOG
    - 'cp debian/testlog/* debian &> /dev/null || :'
    - echo "$CI_COMMIT_REF_NAME" | grep -qP "$STABLE_BRANCH_REGEX" || export INCREMENTAL_VERSION=1
    - kayna debuild
  artifacts:
    name: deb_package
    paths:
      - KAYNA-LOG
      - LINTIAN*
      - ELDORADO/
    expire_in: 1 week

upload_job:
  image: "kayna:$DISTRIBUTION"
  stage: upload
  only: *build_filter
  script:
    - rm -f KAYNA-LOG
    - echo "$CI_COMMIT_REF_NAME" | grep -qP "$STABLE_BRANCH_REGEX" && export SUITE="$CI_COMMIT_REF_NAME" UPLOAD_COMPONENT=testing STRICT_DEBIAN_DIST_NAME="$CI_COMMIT_REF_NAME" || export UPLOAD_COMPONENT=unstable
    - '[ "$CI_COMMIT_REF_NAME" = "$NEXT_RELEASE_NAME" ] && STRICT_DEBIAN_DIST_NAME= || :'
    - kayna upload
  artifacts:
    name: upload_log_archive
    paths:
      - KAYNA-LOG
      - ELDORADO/*.upload
      - ELDORADO/.*
    expire_in: 12h

docker_build_job:
  image: "kayna-$DISTRIBUTION-$CI_PROJECT_ID"
  stage: docker_build
  only: *build_filter
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
  script:
    - rm -f KAYNA-LOG
    - echo "$CI_COMMIT_REF_NAME" | grep -qP "$STABLE_BRANCH_REGEX" && export DOCKER_EXTRA_TAGS="$CI_COMMIT_REF_NAME"
    - kayna docker-build
  artifacts:
    name: docker_build_log_archive
    expire_in: 12h
    paths:
      - KAYNA-LOG

.deploy_job:
  image: "kayna-$DISTRIBUTION-$CI_PROJECT_ID"
  stage: deploy
  only: *deploy_filter
  script:
    - rm -f KAYNA-LOG
    - kayna deploy
  artifacts:
    untracked: true
    expire_in: 1 day

.diagnose_job:
  stage: diagnose
  allow_failure: true
  when: manual #on_failure
  script:
    - rm -f KAYNA-LOG
    - kayna diagnose "kayna-diagnose-$CI_JOB_ID"
  artifacts:
    untracked: true
    expire_in: 1 day

